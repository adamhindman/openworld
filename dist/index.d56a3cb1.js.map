{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-7d117d0b3ecffaf4.js","src/app.js","src/globe.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"4a236f9275d0a351\";module.bundle.HMR_BUNDLE_ID = \"b5b6c481d56a3cb1\";\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  var parents = getParents(module.bundle.root, id); // If no parents, the asset is new. Prevent reloading the page.\n\n  if (!parents.length) {\n    return true;\n  }\n\n  return parents.some(function (v) {\n    return hmrAcceptCheck(v[0], v[1], null);\n  });\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","console.clear();\n\nimport { globe } from \"./globe.js\";\n\nconst arrayToLowercase = (arr) => arr.map((i) => i.toLowerCase());\n\nlet currentLocation = \"United States\";\n\nlet getCurrentNeighbors = () => {\n  const current = globe.filter((i) => {\n    return i.area.toLowerCase() == currentLocation.toLowerCase();\n  });\n  return current[0].neighbors;\n};\n\nconst getCurrentNeighborsList = () => {\n  let list = \"\";\n  list = getCurrentNeighbors().reduce((result, cur, i) => {\n    return result + `<button data-destination=\"${cur}\">${cur}</button>`;\n  }, \"\");\n  return `<p>${list}</p>`;\n};\n\nconst render = (val = null, msg = null, area = currentLocation) => {\n  const t = setTimeout(() => {\n    displayElement = document.getElementById(\"display\");\n    displayElement.innerHTML += getDisplay(val, msg);\n    document.querySelector(\"#console\").scrollIntoView(true);\n    document.querySelectorAll(\"button\").forEach((i) => {\n      i.addEventListener(\"click\", (e) => {\n        const dest = e.target.dataset.destination.toLowerCase();\n        document.querySelector(\"#prompt\").value = `go ${dest}`;\n      });\n    });\n  }, 500);\n};\n\nconst handleSubmit = (val, msg = \"\") => {\n  verb = val.split(\" \")[0];\n  noun = val.substring(3);\n  if (verb == \"go\" && arrayToLowercase(getCurrentNeighbors()).includes(noun)) {\n    currentLocation = noun;\n  } else if (verb == \"go\") {\n    msg = `<p>You can't get to ${noun} from here!</p>`;\n  } else if (verb == \"help\") {\n    msg = `\n      <h3>HELP</h3>\n      <p>Type \"go\" and then the name of a nearby country to travel there.</p>\n      <p>Or click on a country's name in the list to make me type it for you.</p>\n    `;\n  } else {\n    msg = `<p>I don't recognize the verb \"${verb}\".</p>`;\n  }\n  render(val, msg);\n};\n\nconst getDisplay = (val, msg, area) => {\n  let display;\n  display = `\n    ${val != null ? `<p><span class=\"caret\"></span>${val}</p>` : ``}\n    ${msg != null ? `<p>${msg}</p>` : ``}\n    <p>You are in <span>${currentLocation}</span></p>\n    <p>Exits are: ${getCurrentNeighborsList()}\n  `;\n  return display;\n};\n\ndocument.getElementById(\"prompt\").addEventListener(\"keydown\", (e) => {\n  if (e.key === \"Enter\") {\n    handleSubmit(e.target.value.toLowerCase());\n    e.target.value = \"\";\n  }\n});\n\ndocument.querySelector(\"html\").addEventListener(\"click\", (e) => {\n  document.getElementById(\"prompt\").focus();\n});\n\nrender();\n","export const globe = [\n  {\n    area: \"Arctic Ocean\",\n    type: \"ocean\",\n    neighbors: [\n      \"Canada\",\n      \"Greenland\",\n      \"Iceland\",\n      \"Norway\",\n      \"Russia\",\n      \"United States\",\n    ],\n  },\n  {\n    area: \"Pacific Ocean\",\n    type: \"ocean\",\n    neighbors: [\n      \"Australia\",\n      \"Brunei\",\n      \"Cambodia\",\n      \"Canada\",\n      \"Chile\",\n      \"China\",\n      \"Colombia\",\n      \"Costa Rica\",\n      \"Ecuador\",\n      \"El Salvador\",\n      \"Federated States of Micronesia\",\n      \"Fiji\",\n      \"Guatemala\",\n      \"Honduras\",\n      \"Hong Kong\",\n      \"Indonesia\",\n      \"Japan\",\n      \"Kiribati\",\n      \"Malaysia\",\n      \"Marshall Islands\",\n      \"Mexico\",\n      \"Nauru\",\n      \"New Zealand\",\n      \"Nicaragua\",\n      \"North Korea\",\n      \"Palau\",\n      \"Panama\",\n      \"Papua New Guinea\",\n      \"Peru\",\n      \"Philippines\",\n      \"Russia\",\n      \"Samoa\",\n      \"Singapore\",\n      \"Solomon Islands\",\n      \"South Korea\",\n      \"Taiwan\",\n      \"Thailand\",\n      \"East Timor\",\n      \"Tonga\",\n      \"Tuvalu\",\n      \"United States\",\n      \"Vanuatu\",\n      \"Vietnam\",\n    ],\n  },\n  {\n    area: \"Atlantic Ocean\",\n    type: \"ocean\",\n    neighbors: [\n      \"Albania\",\n      \"Belgium\",\n      \"Bermuda\",\n      \"Bosnia and Herzegovina\",\n      \"Bulgaria\",\n      \"Croatia\",\n      \"Cyprus\",\n      \"Denmark\",\n      \"Estonia\",\n      \"Finland\",\n      \"France\",\n      \"Georgia\",\n      \"Germany\",\n      \"Greece\",\n      \"Iceland\",\n      \"Ireland\",\n      \"Italy\",\n      \"Latvia\",\n      \"Lithuania\",\n      \"Malta\",\n      \"Monaco\",\n      \"Montenegro\",\n      \"Netherlands\",\n      \"Norway\",\n      \"Poland\",\n      \"Portugal\",\n      \"Romania\",\n      \"Russia\",\n      \"Slovenia\",\n      \"Spain\",\n      \"Sweden\",\n      \"Turkey\",\n      \"Ukraine\",\n      \"Algeria\",\n      \"Angola\",\n      \"Benin\",\n      \"Cameroon\",\n      \"Cape Verde\",\n      \"Democratic Republic of the Congo\",\n      \"Egypt\",\n      \"England\",\n      \"Equatorial Guinea\",\n      \"Gabon\",\n      \"Gambia\",\n      \"Ghana\",\n      \"Guinea\",\n      \"Guinea-Bissau\",\n      \"Ivory Coast\",\n      \"Liberia\",\n      \"Libya\",\n      \"Mauritania\",\n      \"Morocco\",\n      \"Namibia\",\n      \"Nigeria\",\n      \"Republic of the Congo\",\n      \"São Tomé and Príncipe\",\n      \"Scotland\",\n      \"Senegal\",\n      \"Sierra Leone\",\n      \"South Africa\",\n      \"Togo\",\n      \"Tunisia\",\n      \"Cyprus\",\n      \"Georgia\",\n      \"Israel\",\n      \"Lebanon\",\n      \"Russia\",\n      \"Palestine\",\n      \"Syria\",\n      \"Turkey\",\n      \"Argentina\",\n      \"Brazil\",\n      \"Chile\",\n      \"Colombia\",\n      \"Suriname\",\n      \"Uruguay\",\n      \"Venezuela\",\n      \"Bahamas\",\n      \"Belize\",\n      \"Bermuda\",\n      \"Canada\",\n      \"Costa Rica\",\n      \"Guatemala\",\n      \"Honduras\",\n      \"Mexico\",\n      \"Nicaragua\",\n      \"Panama\",\n      \"United States\",\n      \"Antigua and Barbuda\",\n      \"Guyana\",\n      \"Barbados\",\n      \"Cuba\",\n      \"Dominica\",\n      \"Dominican Republic\",\n      \"Grenada\",\n      \"Haiti\",\n      \"Jamaica\",\n      \"Saint Kitts and Nevis\",\n      \"Saint Lucia\",\n      \"Saint Vincent and the Grenadines\",\n      \"Svalbard\",\n      \"Trinidad and Tobago\",\n      \"Ireland\",\n    ],\n  },\n  {\n    area: \"Indian Ocean\",\n    type: \"ocean\",\n    neighbors: [\n      \"Australia\",\n      \"Bahrain\",\n      \"Bangladesh\",\n      \"Comoros\",\n      \"Djibouti\",\n      \"Egypt\",\n      \"Eritrea\",\n      \"India\",\n      \"Indonesia\",\n      \"Iran\",\n      \"Iraq\",\n      \"Israel\",\n      \"Jordan\",\n      \"Kenya\",\n      \"Kuwait\",\n      \"Madagascar\",\n      \"Malaysia\",\n      \"Maldives\",\n      \"Mauritius\",\n      \"Mozambique\",\n      \"Myanmar\",\n      \"Oman\",\n      \"Pakistan\",\n      \"Qatar\",\n      \"Saudi Arabia\",\n      \"Seychelles\",\n      \"Singapore\",\n      \"Somalia\",\n      \"South Africa\",\n      \"Sri Lanka\",\n      \"Sudan\",\n      \"Tanzania\",\n      \"Thailand\",\n      \"East Timor\",\n      \"United Arab Emirates\",\n      \"Yemen\",\n    ],\n  },\n  {\n    area: \"Abkhazia\",\n    type: \"country\",\n    neighbors: [\"Russia\", \"Georgia\"],\n  },\n  {\n    area: \"Afghanistan\",\n    type: \"country\",\n    neighbors: [\n      \"China\",\n      \"Iran\",\n      \"Pakistan\",\n      \"Tajikistan\",\n      \"Turkmenistan\",\n      \"Uzbekistan\",\n    ],\n  },\n  {\n    area: \"Albania\",\n    type: \"country\",\n    neighbors: [\n      \"Greece\",\n      \"Kosovo\",\n      \"North Macedonia\",\n      \"Montenegro\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Algeria\",\n    type: \"country\",\n    neighbors: [\n      \"Libya\",\n      \"Mali\",\n      \"Mauritania\",\n      \"Morocco\",\n      \"Niger\",\n      \"Tunisia\",\n      \"Western Sahara\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Andorra\",\n    type: \"country\",\n    neighbors: [\"France\", \"Spain\"],\n  },\n  {\n    area: \"Angola\",\n    type: \"country\",\n    neighbors: [\n      \"Democratic Republic of the Congo\",\n      \"Republic of the Congo\",\n      \"Namibia\",\n      \"Zambia\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Antigua and Barbuda\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Argentina\",\n    type: \"country\",\n    neighbors: [\"Bolivia\", \"Brazil\", \"Chile\", \"Paraguay\", \"Uruguay\"],\n  },\n  {\n    area: \"Armenia\",\n    type: \"country\",\n    neighbors: [\"Azerbaijan\", \"Georgia\", \"Iran\", \"Turkey\"],\n  },\n  {\n    area: \"Australia\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\", \"Indian Ocean\"],\n  },\n  {\n    area: \"Austria\",\n    type: \"country\",\n    neighbors: [\n      \"Czech Republic\",\n      \"Germany\",\n      \"Hungary\",\n      \"Italy\",\n      \"Liechtenstein\",\n      \"Slovakia\",\n      \"Slovenia\",\n      \"Switzerland\",\n    ],\n  },\n  {\n    area: \"Azerbaijan\",\n    type: \"country\",\n    neighbors: [\"Armenia\", \"Georgia\", \"Iran\", \"Russia\", \"Turkey\"],\n  },\n  {\n    area: \"Bahamas\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Bahrain\",\n    type: \"country\",\n    neighbors: [\"Indian Ocean\"],\n  },\n  {\n    area: \"Bangladesh\",\n    type: \"country\",\n    neighbors: [\"India\", \"Myanmar\", \"Indian Ocean\"],\n  },\n  {\n    area: \"Barbados\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Belarus\",\n    type: \"country\",\n    neighbors: [\"Latvia\", \"Lithuania\", \"Poland\", \"Russia\", \"Ukraine\"],\n  },\n  {\n    area: \"Belgium\",\n    type: \"country\",\n    neighbors: [\n      \"France\",\n      \"Germany\",\n      \"Luxembourg\",\n      \"Netherlands\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Belize\",\n    type: \"country\",\n    neighbors: [\"Guatemala\", \"Mexico\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Benin\",\n    type: \"country\",\n    neighbors: [\"Burkina Faso\", \"Niger\", \"Nigeria\", \"Togo\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Bermuda\",\n    type: \"special\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Bhutan\",\n    type: \"country\",\n    neighbors: [\"China\", \"India\"],\n  },\n  {\n    area: \"Bolivia\",\n    type: \"country\",\n    neighbors: [\"Argentina\", \"Brazil\", \"Chile\", \"Paraguay\", \"Peru\"],\n  },\n  {\n    area: \"Bosnia and Herzegovina\",\n    type: \"country\",\n    neighbors: [\"Croatia\", \"Montenegro\", \"Serbia\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Botswana\",\n    type: \"country\",\n    neighbors: [\"Namibia\", \"South Africa\", \"Zambia\", \"Zimbabwe\"],\n  },\n  {\n    area: \"Brazil\",\n    type: \"country\",\n    neighbors: [\n      \"Argentina\",\n      \"Bolivia\",\n      \"Colombia\",\n      \"French Guiana\",\n      \"Guyana\",\n      \"Paraguay\",\n      \"Peru\",\n      \"Suriname\",\n      \"Uruguay\",\n      \"Venezuela\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Brunei\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Bulgaria\",\n    type: \"country\",\n    neighbors: [\n      \"Greece\",\n      \"North Macedonia\",\n      \"Romania\",\n      \"Serbia\",\n      \"Turkey\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Burkina Faso\",\n    type: \"country\",\n    neighbors: [\"Benin\", \"Côte d'Ivoire\", \"Ghana\", \"Mali\", \"Niger\", \"Togo\"],\n  },\n  {\n    area: \"Burundi\",\n    type: \"country\",\n    neighbors: [\"Democratic Republic of the Congo\", \"Rwanda\", \"Tanzania\"],\n  },\n  {\n    area: \"Cambodia\",\n    type: \"country\",\n    neighbors: [\"Laos\", \"Thailand\", \"Vietnam\", \"Pacific Ocean\"],\n  },\n  {\n    area: \"Cameroon\",\n    type: \"country\",\n    neighbors: [\n      \"Central African Republic\",\n      \"Chad\",\n      \"Republic of the Congo\",\n      \"Equatorial Guinea Gabon Nigeria\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Canada\",\n    type: \"country\",\n    neighbors: [\n      \"United States\",\n      \"Pacific Ocean\",\n      \"Atlantic Ocean\",\n      \"Arctic Ocean\",\n    ],\n  },\n  {\n    area: \"Cape Verde\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Central African Republic\",\n    type: \"country\",\n    neighbors: [\n      \"Cameroon\",\n      \"Chad\",\n      \"Democratic Republic of the Congo\",\n      \"Republic of the Congo\",\n      \"South Sudan\",\n      \"Sudan\",\n    ],\n  },\n  {\n    area: \"Chad\",\n    type: \"country\",\n    neighbors: [\n      \"Cameroon\",\n      \"Central African Republic\",\n      \"Libya\",\n      \"Niger\",\n      \"Nigeria\",\n      \"Sudan\",\n    ],\n  },\n  {\n    area: \"Chile\",\n    type: \"country\",\n    neighbors: [\n      \"Argentina\",\n      \"Bolivia\",\n      \"Peru\",\n      \"Pacific Ocean\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"China\",\n    type: \"country\",\n    neighbors: [\n      \"Afghanistan\",\n      \"Bhutan\",\n      \"India\",\n      \"Hong Kong\",\n      \"Kazakhstan\",\n      \"North Korea\",\n      \"Kyrgyzstan\",\n      \"Laos\",\n      \"Macau\",\n      \"Mongolia\",\n      \"Myanmar\",\n      \"Nepal\",\n      \"Pakistan\",\n      \"Russia\",\n      \"Tajikistan\",\n      \"Vietnam\",\n      \"Pacific Ocean\",\n    ],\n  },\n  {\n    area: \"Colombia\",\n    type: \"country\",\n    neighbors: [\n      \"Brazil\",\n      \"Ecuador\",\n      \"Panama\",\n      \"Peru\",\n      \"Venezuela\",\n      \"Pacific Ocean\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Comoros\",\n    type: \"country\",\n    neighbors: [\"Indian Ocean\"],\n  },\n  {\n    area: \"Democratic Republic of the Congo\",\n    type: \"country\",\n    neighbors: [\n      \"Angola\",\n      \"Burundi\",\n      \"Central African Republic\",\n      \"Republic of the Congo\",\n      \"Rwanda\",\n      \"South Sudan\",\n      \"Tanzania\",\n      \"Uganda\",\n      \"Zambia\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Republic of the Congo\",\n    type: \"country\",\n    neighbors: [\n      \"Angola\",\n      \"Cameroon\",\n      \"Central African Republic\",\n      \"Democratic Republic of the Congo\",\n      \" Gabon\",\n    ],\n  },\n  {\n    area: \"Costa Rica\",\n    type: \"country\",\n    neighbors: [\"Nicaragua\", \"Panama\", \"Pacific Ocean\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Côte d'Ivoire\",\n    type: \"country\",\n    neighbors: [\n      \"Burkina Faso\",\n      \"Ghana\",\n      \" Guinea\",\n      \" Liberia\",\n      \"Mali\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Croatia\",\n    type: \"country\",\n    neighbors: [\n      \"Bosnia and Herzegovina\",\n      \"Hungary\",\n      \"Montenegro\",\n      \"Serbia\",\n      \"Slovenia\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Cuba\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Cyprus\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Czech Republic\",\n    type: \"country\",\n    neighbors: [\"Austria\", \" Germany\", \" Poland\", \" Slovakia\"],\n  },\n  {\n    area: \"Denmark\",\n    type: \"country\",\n    neighbors: [\"Germany\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Djibouti\",\n    type: \"country\",\n    neighbors: [\"Eritrea\", \" Ethiopia\", \"Somaliland\", \"Indian Ocean\"],\n  },\n  {\n    area: \"Dominica\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Dominican Republic\",\n    type: \"country\",\n    neighbors: [\"Haiti\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"East Timor\",\n    type: \"country\",\n    neighbors: [\"Indonesia\", \"Pacific Ocean\", \"Indian Ocean\"],\n  },\n  {\n    area: \"Ecuador\",\n    type: \"country\",\n    neighbors: [\"Colombia\", \"Peru\", \"Pacific Ocean\"],\n  },\n  {\n    area: \"Egypt\",\n    type: \"country\",\n    neighbors: [\n      \"Gaza Strip\",\n      \"Israel\",\n      \"Libya\",\n      \"Sudan\",\n      \"Atlantic Ocean\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"El Salvador\",\n    type: \"country\",\n    neighbors: [\"Guatemala\", \"Honduras\", \"Pacific Ocean\"],\n  },\n  {\n    area: \"England\",\n    type: \"country\",\n    neighbors: [\"Scotland\", \"Wales\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Equatorial Guinea\",\n    type: \"country\",\n    neighbors: [\"Cameroon\", \"Gabon\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Eritrea\",\n    type: \"country\",\n    neighbors: [\"Djibouti\", \" Ethiopia\", \" Sudan\", \"Indian Ocean\"],\n  },\n  {\n    area: \"Estonia\",\n    type: \"country\",\n    neighbors: [\"Latvia\", \"Russia\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Eswatini\",\n    type: \"country\",\n    neighbors: [\"Mozambique\", \"South Africa\"],\n  },\n  {\n    area: \"Ethiopia\",\n    type: \"country\",\n    neighbors: [\n      \"Djibouti\",\n      \"Eritrea\",\n      \"Kenya\",\n      \"Somalia\",\n      \"South Sudan\",\n      \" Sudan\",\n    ],\n  },\n  {\n    area: \"Fiji\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Finland\",\n    type: \"country\",\n    neighbors: [\"Norway\", \"Sweden\", \" Russia\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"France\",\n    type: \"country\",\n    neighbors: [\n      \"Andorra\",\n      \"Belgium\",\n      \"Germany\",\n      \"Italy\",\n      \"Luxembourg\",\n      \"Monaco\",\n      \"Spain\",\n      \"Switzerland\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Gabon\",\n    type: \"country\",\n    neighbors: [\n      \"Cameroon\",\n      \"Republic of the Congo\",\n      \"Equatorial Guinea\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Gambia\",\n    type: \"country\",\n    neighbors: [\"Senegal\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Georgia\",\n    type: \"country\",\n    neighbors: [\n      \"Armenia\",\n      \"Azerbaijan\",\n      \"Russia\",\n      \"Turkey\",\n      \"Abkhazia\",\n      \"South Ossetia\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Germany\",\n    type: \"country\",\n    neighbors: [\n      \"Austria\",\n      \"Belgium\",\n      \"Czech Republic\",\n      \"Denmark\",\n      \"France\",\n      \"Luxembourg\",\n      \"Netherlands\",\n      \"Poland\",\n      \"Switzerland\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Ghana\",\n    type: \"country\",\n    neighbors: [\"Burkina Faso\", \"Côte d'Ivoire\", \"Togo\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Greece\",\n    type: \"country\",\n    neighbors: [\n      \"Albania\",\n      \"Bulgaria\",\n      \"Turkey\",\n      \"North Macedonia\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Greenland\",\n    type: \"country\",\n    neighbors: [\"Arctic Ocean\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Grenada\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Guatemala\",\n    type: \"country\",\n    neighbors: [\n      \"Belize\",\n      \"El Salvador\",\n      \"Honduras\",\n      \"Mexico\",\n      \"Pacific Ocean\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Guinea\",\n    type: \"country\",\n    neighbors: [\n      \"Côte d'Ivoire\",\n      \"Guinea-Bissau\",\n      \"Liberia\",\n      \"Mali\",\n      \"Senegal\",\n      \"Sierra Leone\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Guinea-Bissau\",\n    type: \"country\",\n    neighbors: [\"Guinea\", \"Senegal\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Guyana\",\n    type: \"country\",\n    neighbors: [\"Brazil\", \"Suriname\", \"Venezuela\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Haiti\",\n    type: \"country\",\n    neighbors: [\"Dominican Republic\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Honduras\",\n    type: \"country\",\n    neighbors: [\n      \"Guatemala\",\n      \"El Salvador\",\n      \"Nicaragua\",\n      \"Pacific Ocean\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Hong Kong\",\n    type: \"special\",\n    neighbors: [\"China\", \"Pacific Ocean\"],\n  },\n  {\n    area: \"Hungary\",\n    type: \"country\",\n    neighbors: [\n      \"Austria\",\n      \"Croatia\",\n      \"Romania\",\n      \"Serbia\",\n      \"Slovakia\",\n      \"Slovenia\",\n      \"Ukraine\",\n    ],\n  },\n  {\n    area: \"Iceland\",\n    type: \"country\",\n    neighbors: [\"Arctic Ocean\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"India\",\n    type: \"country\",\n    neighbors: [\n      \"Bangladesh\",\n      \" Bhutan\",\n      \" China\",\n      \" Myanmar\",\n      \" Nepal\",\n      \" Pakistan\",\n      \"Sri Lanka\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"Indonesia\",\n    type: \"country\",\n    neighbors: [\n      \"East Timor\",\n      \"Malaysia\",\n      \"Papua New Guinea\",\n      \"Pacific Ocean\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"Iran\",\n    type: \"country\",\n    neighbors: [\n      \"Afghanistan\",\n      \"Armenia\",\n      \" Azerbaijan\",\n      \"Iraq\",\n      \"Pakistan\",\n      \"Turkey\",\n      \"Turkmenistan\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"Iraq\",\n    type: \"country\",\n    neighbors: [\n      \"Iran\",\n      \"Jordan\",\n      \"Kuwait\",\n      \"Saudi Arabia\",\n      \"Syria\",\n      \"Turkey\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"Ireland\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Israel\",\n    type: \"country\",\n    neighbors: [\n      \"Egypt\",\n      \"Jordan\",\n      \"Lebanon\",\n      \"Syria\",\n      \"Atlantic Ocean\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"Italy\",\n    type: \"country\",\n    neighbors: [\n      \"Austria\",\n      \"France\",\n      \"San Marino\",\n      \"Slovenia\",\n      \"Switzerland\",\n      \"Vatican City\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Jamaica\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Japan\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Jordan\",\n    type: \"country\",\n    neighbors: [\"Iraq\", \"Israel\", \"Saudi Arabia\", \"Syria\", \"Indian Ocean\"],\n  },\n  {\n    area: \"Kazakhstan\",\n    type: \"country\",\n    neighbors: [\"China\", \" Kyrgyzstan\", \"Russia\", \"Turkmenistan\", \"Uzbekistan\"],\n  },\n  {\n    area: \"Kenya\",\n    type: \"country\",\n    neighbors: [\n      \"Ethiopia\",\n      \"Somalia\",\n      \"South Sudan\",\n      \"Tanzania\",\n      \"Uganda\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"Kiribati\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"North Korea\",\n    type: \"country\",\n    neighbors: [\"China\", \"South Korea\", \"Russia\", \"Pacific Ocean\"],\n  },\n  {\n    area: \"South Korea\",\n    type: \"country\",\n    neighbors: [\"North Korea\", \"Pacific Ocean\"],\n  },\n  {\n    area: \"Kosovo\",\n    type: \"country\",\n    neighbors: [\"Albania\", \"Montenegro\", \"North Macedonia\", \"Serbia\"],\n  },\n  {\n    area: \"Kuwait\",\n    type: \"country\",\n    neighbors: [\"Iraq\", \"Saudi Arabia\", \"Indian Ocean\"],\n  },\n  {\n    area: \"Kyrgyzstan\",\n    type: \"country\",\n    neighbors: [\"China\", \"Kazakhstan\", \"Tajikistan\", \"Uzbekistan\"],\n  },\n  {\n    area: \"Laos\",\n    type: \"country\",\n    neighbors: [\"Cambodia\", \"China\", \"Myanmar\", \"Thailand\", \"Vietnam\"],\n  },\n  {\n    area: \"Latvia\",\n    type: \"country\",\n    neighbors: [\"Belarus\", \"Estonia\", \"Lithuania\", \"Russia\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Lebanon\",\n    type: \"country\",\n    neighbors: [\"Israel\", \"Syria\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Lesotho\",\n    type: \"country\",\n    neighbors: [\"South Africa\"],\n  },\n  {\n    area: \"Liberia\",\n    type: \"country\",\n    neighbors: [\"Guinea\", \"Côte d'Ivoire\", \"Sierra Leone\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Libya\",\n    type: \"country\",\n    neighbors: [\n      \"Algeria\",\n      \"Chad\",\n      \"Egypt\",\n      \"Niger\",\n      \"Sudan\",\n      \"Tunisia\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Liechtenstein\",\n    type: \"country\",\n    neighbors: [\"Austria\", \"Switzerland\"],\n  },\n  {\n    area: \"Lithuania\",\n    type: \"country\",\n    neighbors: [\"Belarus\", \"Latvia\", \"Poland\", \"Russia\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Luxembourg\",\n    type: \"country\",\n    neighbors: [\"Belgium\", \"France\", \"Germany\"],\n  },\n  {\n    area: \"Macau\",\n    type: \"country\",\n    neighbors: [\"China\", \"Pacific Ocean\"],\n  },\n  {\n    area: \"Madagascar\",\n    type: \"country\",\n    neighbors: [\"Indian Ocean\"],\n  },\n  {\n    area: \"Madeira\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Malawi\",\n    type: \"country\",\n    neighbors: [\"Mozambique\", \"Tanzania\", \"Zambia\"],\n  },\n  {\n    area: \"Malaysia\",\n    type: \"country\",\n    neighbors: [\n      \"Brunei\",\n      \"Indonesia\",\n      \"Thailand\",\n      \"Pacific Ocean\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"Maldives\",\n    type: \"country\",\n    neighbors: [\"Indian Ocean\"],\n  },\n  {\n    area: \"Mali\",\n    type: \"country\",\n    neighbors: [\n      \"Algeria\",\n      \"Burkina Faso\",\n      \"Côte d'Ivoire\",\n      \"Guinea\",\n      \"Mauritania\",\n      \"Niger\",\n      \"Senegal\",\n    ],\n  },\n  {\n    area: \"Malta\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Marshall Islands\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Mauritania\",\n    type: \"country\",\n    neighbors: [\n      \"Algeria\",\n      \"Mali\",\n      \"Senegal\",\n      \"Western Sahara\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Mauritius\",\n    type: \"country\",\n    neighbors: [\"Indian Ocean\"],\n  },\n  {\n    area: \"Mexico\",\n    type: \"country\",\n    neighbors: [\n      \"Belize\",\n      \"Guatemala\",\n      \"United States\",\n      \"Pacific Ocean\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Federated States of Micronesia\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Moldova\",\n    type: \"country\",\n    neighbors: [\"Romania\", \"Ukraine\"],\n  },\n  {\n    area: \"Monaco\",\n    type: \"country\",\n    neighbors: [\"France\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Mongolia\",\n    type: \"country\",\n    neighbors: [\"China\", \"Russia\"],\n  },\n  {\n    area: \"Montenegro\",\n    type: \"country\",\n    neighbors: [\n      \"Albania\",\n      \"Bosnia and Herzegovina\",\n      \"Croatia\",\n      \"Kosovo\",\n      \"Serbia\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Morocco\",\n    type: \"country\",\n    neighbors: [\"Algeria\", \"Western Sahara\", \"Spain\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Mozambique\",\n    type: \"country\",\n    neighbors: [\n      \"Eswatini\",\n      \"Malawi\",\n      \"South Africa\",\n      \"Tanzania\",\n      \"Zambia\",\n      \"Zimbabwe\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"Myanmar\",\n    type: \"country\",\n    neighbors: [\n      \"Bangladesh\",\n      \"China\",\n      \"India\",\n      \"Laos\",\n      \"Thailand\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"Namibia\",\n    type: \"country\",\n    neighbors: [\n      \"Angola\",\n      \"Botswana\",\n      \"South Africa\",\n      \"Zambia\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Nauru\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Nepal\",\n    type: \"country\",\n    neighbors: [\"China\", \"India\"],\n  },\n  {\n    area: \"Netherlands\",\n    type: \"country\",\n    neighbors: [\n      \"Belgium\",\n      \"Germany\",\n      \"Saint Martin\",\n      \"France\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"New Zealand\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Nicaragua\",\n    type: \"country\",\n    neighbors: [\"Costa Rica\", \"Honduras\", \"Pacific Ocean\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Niger\",\n    type: \"country\",\n    neighbors: [\n      \"Algeria\",\n      \"Benin\",\n      \"Burkina Faso\",\n      \"Chad\",\n      \"Libya\",\n      \"Mali\",\n      \"Nigeria\",\n    ],\n  },\n  {\n    area: \"Nigeria\",\n    type: \"country\",\n    neighbors: [\"Benin\", \"Cameroon\", \"Chad\", \"Niger\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"North Macedonia\",\n    type: \"country\",\n    neighbors: [\"Albania\", \"Bulgaria\", \"Greece\", \"Kosovo\", \"Serbia\"],\n  },\n  {\n    area: \"Norway\",\n    type: \"country\",\n    neighbors: [\n      \"Finland\",\n      \"Sweden\",\n      \"Russia\",\n      \"Arctic Ocean\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Oman\",\n    type: \"country\",\n    neighbors: [\n      \"Saudi Arabia\",\n      \"United Arab Emirates\",\n      \"Yemen\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"Pakistan\",\n    type: \"country\",\n    neighbors: [\"Afghanistan\", \"India\", \"Iran\", \"China\", \"Indian Ocean\"],\n  },\n  {\n    area: \"Palau\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Palestine\",\n    type: \"country\",\n    neighbors: [\"Egypt\", \"Israel\", \"Jordan\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Panama\",\n    type: \"country\",\n    neighbors: [\"Colombia\", \"Costa Rica\", \"Pacific Ocean\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Papua New Guinea\",\n    type: \"country\",\n    neighbors: [\"Indonesia\", \"Pacific Ocean\"],\n  },\n  {\n    area: \"Paraguay\",\n    type: \"country\",\n    neighbors: [\"Argentina\", \"Bolivia\", \"Brazil\"],\n  },\n  {\n    area: \"Peru\",\n    type: \"country\",\n    neighbors: [\n      \"Bolivia\",\n      \"Brazil\",\n      \"Chile\",\n      \"Colombia\",\n      \"Ecuador\",\n      \"Pacific Ocean\",\n    ],\n  },\n  {\n    area: \"Philippines\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Poland\",\n    type: \"country\",\n    neighbors: [\n      \"Belarus\",\n      \"Czech Republic\",\n      \"Germany\",\n      \"Lithuania\",\n      \"Russia\",\n      \"Slovakia\",\n      \"Ukraine\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Portugal\",\n    type: \"country\",\n    neighbors: [\"Spain\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Qatar\",\n    type: \"country\",\n    neighbors: [\"Saudi Arabia\", \"Indian Ocean\"],\n  },\n  {\n    area: \"Romania\",\n    type: \"country\",\n    neighbors: [\n      \"Bulgaria\",\n      \"Hungary\",\n      \"Moldova\",\n      \"Serbia\",\n      \"Ukraine\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Russia\",\n    type: \"country\",\n    neighbors: [\n      \"Azerbaijan\",\n      \"Belarus\",\n      \"China\",\n      \"Estonia\",\n      \"Finland\",\n      \"Georgia\",\n      \"Kazakhstan\",\n      \"North Korea\",\n      \"Latvia\",\n      \"Lithuania\",\n      \"Mongolia\",\n      \"Norway\",\n      \"Poland\",\n      \"Ukraine\",\n      \"South Ossetia\",\n      \"Abkhazia\",\n      \"Arctic Ocean\",\n      \"Pacific Ocean\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Rwanda\",\n    type: \"country\",\n    neighbors: [\n      \"Burundi\",\n      \"Democratic Republic of the Congo\",\n      \"Tanzania\",\n      \"Uganda\",\n    ],\n  },\n  {\n    area: \"Saint Kitts and Nevis\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Saint Lucia\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Saint Vincent and the Grenadines\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Samoa\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"San Marino\",\n    type: \"country\",\n    neighbors: [\"Italy\"],\n  },\n  {\n    area: \"São Tomé and Príncipe\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Saudi Arabia\",\n    type: \"country\",\n    neighbors: [\n      \"Iraq\",\n      \"Jordan\",\n      \"Kuwait\",\n      \"Oman\",\n      \"Qatar\",\n      \"United Arab Emirates\",\n      \"Yemen\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"Scotland\",\n    type: \"country\",\n    neighbors: [\"England\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Senegal\",\n    type: \"country\",\n    neighbors: [\n      \"Gambia\",\n      \"Guinea\",\n      \"Guinea-Bissau\",\n      \"Mali\",\n      \"Mauritania\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Serbia\",\n    type: \"country\",\n    neighbors: [\n      \"Bosnia and Herzegovina\",\n      \"Bulgaria\",\n      \"Croatia\",\n      \"Hungary\",\n      \"Kosovo\",\n      \"Montenegro\",\n      \"North Macedonia\",\n      \"Romania\",\n    ],\n  },\n  {\n    area: \"Seychelles\",\n    type: \"country\",\n    neighbors: [\"Indian Ocean\"],\n  },\n  {\n    area: \"Sierra Leone\",\n    type: \"country\",\n    neighbors: [\"Guinea\", \"Liberia\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Singapore\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\", \"Indian Ocean\"],\n  },\n  {\n    area: \"Slovakia\",\n    type: \"country\",\n    neighbors: [\"Austria\", \"Czech Republic\", \"Hungary\", \"Poland\", \"Ukraine\"],\n  },\n  {\n    area: \"Slovenia\",\n    type: \"country\",\n    neighbors: [\"Austria\", \"Croatia\", \"Italy\", \"Hungary\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Solomon Islands\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Somalia\",\n    type: \"country\",\n    neighbors: [\"Djibouti\", \"Ethiopia\", \"Kenya\", \"Indian Ocean\"],\n  },\n  {\n    area: \"South Africa\",\n    type: \"country\",\n    neighbors: [\n      \"Botswana\",\n      \"Eswatini\",\n      \"Lesotho\",\n      \"Mozambique\",\n      \"Namibia\",\n      \"Zimbabwe\",\n      \"Atlantic Ocean\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"South Ossetia\",\n    type: \"country\",\n    neighbors: [\"Russia\", \"Georgia\"],\n  },\n  {\n    area: \"South Sudan\",\n    type: \"country\",\n    neighbors: [\n      \"Central African Republic\",\n      \"Democratic Republic of the Congo\",\n      \"Ethiopia\",\n      \"Kenya\",\n      \"Sudan\",\n      \"Uganda\",\n    ],\n  },\n  {\n    area: \"Spain\",\n    type: \"country\",\n    neighbors: [\n      \"Andorra\",\n      \"France\",\n      \"Portugal\",\n      \"Gibraltar\",\n      \"Morocco\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Sri Lanka\",\n    type: \"country\",\n    neighbors: [\"India\", \"Indian Ocean\"],\n  },\n  {\n    area: \"Sudan\",\n    type: \"country\",\n    neighbors: [\n      \"Central African Republic\",\n      \"Chad\",\n      \"Egypt\",\n      \"Eritrea\",\n      \"Ethiopia\",\n      \"Libya\",\n      \"South Sudan\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"Suriname\",\n    type: \"country\",\n    neighbors: [\"Brazil\", \"French Guiana\", \"Guyana\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Svalbard\",\n    type: \"special\",\n    neighbors: [\"Brazil\", \"French Guiana\", \"Guyana\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Sweden\",\n    type: \"country\",\n    neighbors: [\"Finland\", \"Norway\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Switzerland\",\n    type: \"country\",\n    neighbors: [\"Austria\", \"France\", \"Italy\", \"Liechtenstein\", \"Germany\"],\n  },\n  {\n    area: \"Syria\",\n    type: \"country\",\n    neighbors: [\n      \"Iraq\",\n      \"Israel\",\n      \"Jordan\",\n      \"Lebanon\",\n      \"Turkey\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Taiwan\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Tajikistan\",\n    type: \"country\",\n    neighbors: [\"Afghanistan\", \"China\", \"Kyrgyzstan\", \"Uzbekistan\"],\n  },\n  {\n    area: \"Tanzania\",\n    type: \"country\",\n    neighbors: [\n      \"Burundi\",\n      \"Democratic Republic of the Congo\",\n      \"Kenya\",\n      \"Malawi\",\n      \"Mozambique\",\n      \"Rwanda\",\n      \"Uganda\",\n      \"Zambia\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"Tasmania\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Thailand\",\n    type: \"country\",\n    neighbors: [\n      \"Cambodia\",\n      \"Laos\",\n      \"Malaysia\",\n      \"Myanmar\",\n      \"Pacific Ocean\",\n      \"Indian Ocean\",\n    ],\n  },\n  {\n    area: \"Togo\",\n    type: \"country\",\n    neighbors: [\"Benin\", \"Burkina Faso\", \"Ghana\"],\n  },\n  {\n    area: \"Tonga\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Trinidad and Tobago\",\n    type: \"country\",\n    neighbors: [\"Atlantic Ocean\"],\n  },\n  {\n    area: \"Tunisia\",\n    type: \"country\",\n    neighbors: [\"Algeria\", \"Libya\"],\n  },\n  {\n    area: \"Turkey\",\n    type: \"country\",\n    neighbors: [\n      \"Armenia\",\n      \"Azerbaijan\",\n      \"Bulgaria\",\n      \"Georgia\",\n      \"Greece\",\n      \"Iran\",\n      \"Iraq\",\n      \"Syria\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Turkmenistan\",\n    type: \"country\",\n    neighbors: [\"Afghanistan\", \"Iran\", \"Kazakhstan\", \"Uzbekistan\"],\n  },\n  {\n    area: \"Tuvalu\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Uganda\",\n    type: \"country\",\n    neighbors: [\n      \"Democratic Republic of the Congo\",\n      \"Kenya\",\n      \"Rwanda\",\n      \"South Sudan\",\n      \"Tanzania\",\n    ],\n  },\n  {\n    area: \"Ukraine\",\n    type: \"country\",\n    neighbors: [\n      \"Belarus\",\n      \"Hungary\",\n      \"Moldova\",\n      \"Poland\",\n      \"Romania\",\n      \"Russia\",\n      \"Slovakia\",\n    ],\n  },\n  {\n    area: \"United Arab Emirates\",\n    type: \"country\",\n    neighbors: [\"Oman\", \"Saudi Arabia\", \"Indian Ocean\"],\n  },\n  {\n    area: \"United States\",\n    type: \"country\",\n    neighbors: [\n      \"Canada\",\n      \"Mexico\",\n      \"Arctic Ocean\",\n      \"Pacific Ocean\",\n      \"Atlantic Ocean\",\n    ],\n  },\n  {\n    area: \"Uruguay\",\n    type: \"country\",\n    neighbors: [\"Argentina\", \"Brazil\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Uzbekistan\",\n    type: \"country\",\n    neighbors: [\n      \"Afghanistan\",\n      \"Kazakhstan\",\n      \"Kyrgyzstan\",\n      \"Tajikistan\",\n      \"Turkmenistan\",\n    ],\n  },\n  {\n    area: \"Vanuatu\",\n    type: \"country\",\n    neighbors: [\"Pacific Ocean\"],\n  },\n  {\n    area: \"Vatican City\",\n    type: \"country\",\n    neighbors: [\"Italy\"],\n  },\n  {\n    area: \"Venezuela\",\n    type: \"country\",\n    neighbors: [\"Brazil\", \"Colombia\", \"Guyana\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Vietnam\",\n    type: \"country\",\n    neighbors: [\"Cambodia\", \"China\", \"Laos\", \"Pacific Ocean\"],\n  },\n  {\n    area: \"Wales\",\n    type: \"country\",\n    neighbors: [\"England\", \"Atlantic Ocean\"],\n  },\n  {\n    area: \"Western Sahara\",\n    type: \"country\",\n    neighbors: [\"Algeria\", \"Mauritania\", \"Morocco\"],\n  },\n  {\n    area: \"Yemen\",\n    type: \"country\",\n    neighbors: [\"Oman\", \"Saudi Arabia\", \"Indian Ocean\"],\n  },\n  {\n    area: \"Zambia\",\n    type: \"country\",\n    neighbors: [\n      \"Angola\",\n      \"Botswana\",\n      \"Democratic Republic of the Congo\",\n      \"Malawi\",\n      \"Mozambique\",\n      \"Namibia\",\n      \"Tanzania\",\n      \"Zimbabwe\",\n    ],\n  },\n  {\n    area: \"Zimbabwe\",\n    type: \"country\",\n    neighbors: [\"Botswana\", \"Mozambique\", \"South Africa\", \"Zambia\"],\n  },\n]","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":[],"version":3,"file":"index.d56a3cb1.js.map","sourceRoot":"/__parcel_source_root/"}